{"version":3,"sources":["../src/js2svg.js"],"names":["EXTEND","require","textElem","elemsGroups","textContent","concat","defaults","doctypeStart","doctypeEnd","procInstStart","procInstEnd","tagOpenStart","tagOpenEnd","tagCloseStart","tagCloseEnd","tagShortStart","tagShortEnd","attrStart","attrEnd","commentStart","commentEnd","cdataStart","cdataEnd","textStart","textEnd","indent","regEntities","regValEntities","encodeEntity","pretty","useShortTags","entities","reactAttrNames","module","exports","data","config","JS2SVG","convert","indentLevel","textContext","char","prototype","svg","content","forEach","item","elem","createElem","text","createText","doctype","createDoctype","processinginstruction","createProcInst","comment","createComment","cdata","createCDATA","info","width","height","createIndent","i","instruction","name","body","isElem","hasAttr","attr","value","isEmpty","createAttrs","openIndent","textIndent","processedData","dataEnd","attrs","eachAttr","type","attrName","String","replace"],"mappings":"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","file":"js2svg.js","sourcesContent":["/**\n * Source: https://github.com/svg/svgo/blob/master/lib/svgo/js2svg.js\n */\n\n'use strict';\n\nvar EXTEND = require('whet.extend'),\n    textElem = require('./_collections.js').elemsGroups.textContent.concat('title');\n\nvar defaults = {\n    doctypeStart: '<!DOCTYPE',\n    doctypeEnd: '>',\n    procInstStart: '<?',\n    procInstEnd: '?>',\n    tagOpenStart: '<',\n    tagOpenEnd: '>',\n    tagCloseStart: '</',\n    tagCloseEnd: '>',\n    tagShortStart: '<',\n    tagShortEnd: '/>',\n    attrStart: '=\"',\n    attrEnd: '\"',\n    commentStart: '<!--',\n    commentEnd: '-->',\n    cdataStart: '<![CDATA[',\n    cdataEnd: ']]>',\n    textStart: '',\n    textEnd: '',\n    indent: '    ',\n    regEntities: /[&'\"<>]/g,\n    regValEntities: /[&\"<>]/g,\n    encodeEntity: encodeEntity,\n    pretty: false,\n    useShortTags: true\n};\n\nvar entities = {\n      '&': '&amp;',\n      '\\'': '&apos;',\n      '\"': '&quot;',\n      '>': '&gt;',\n      '<': '&lt;',\n    };\n\nvar reactAttrNames = {\n    'class': 'className',\n};\n\n/**\n * Convert SVG-as-JS object to SVG (XML) string.\n *\n * @param {Object} data input data\n * @param {Object} config config\n *\n * @return {Object} output data\n */\nmodule.exports = function(data, config) {\n\n    return new JS2SVG(config).convert(data);\n\n};\n\nfunction JS2SVG(config) {\n\n    if (config) {\n        this.config = EXTEND(true, {}, defaults, config);\n    } else {\n        this.config = defaults;\n    }\n\n    if (this.config.pretty) {\n        this.config.doctypeEnd += '\\n';\n        this.config.procInstEnd += '\\n';\n        this.config.commentEnd += '\\n';\n        this.config.cdataEnd += '\\n';\n        this.config.tagShortEnd += '\\n';\n        this.config.tagOpenEnd += '\\n';\n        this.config.tagCloseEnd += '\\n';\n        this.config.textEnd += '\\n';\n    }\n\n    this.indentLevel = 0;\n    this.textContext = null;\n\n}\n\nfunction encodeEntity(char) {\n    return entities[char];\n}\n\n/**\n * Start conversion.\n *\n * @param {Object} data input data\n *\n * @return {String}\n */\nJS2SVG.prototype.convert = function(data) {\n\n    var svg = '';\n\n    if (data.content) {\n\n        this.indentLevel++;\n\n        data.content.forEach(function(item) {\n\n            if (item.elem) {\n               svg += this.createElem(item);\n            } else if (item.text) {\n               svg += this.createText(item.text);\n            } else if (item.doctype) {\n                svg += this.createDoctype(item.doctype);\n            } else if (item.processinginstruction) {\n                svg += this.createProcInst(item.processinginstruction);\n            } else if (item.comment) {\n                svg += this.createComment(item.comment);\n            } else if (item.cdata) {\n                svg += this.createCDATA(item.cdata);\n            }\n\n        }, this);\n\n    }\n\n    this.indentLevel--;\n\n    return {\n        data: svg,\n        info: {\n            width: this.width,\n            height: this.height\n        }\n    };\n\n};\n\n/**\n * Create indent string in accordance with the current node level.\n *\n * @return {String}\n */\nJS2SVG.prototype.createIndent = function() {\n\n    var indent = '';\n\n    if (this.config.pretty && !this.textContext) {\n        for (var i = 1; i < this.indentLevel; i++) {\n            indent += this.config.indent;\n        }\n    }\n\n    return indent;\n\n};\n\n/**\n * Create doctype tag.\n *\n * @param {String} doctype doctype body string\n *\n * @return {String}\n */\nJS2SVG.prototype.createDoctype = function(doctype) {\n\n    return  this.config.doctypeStart +\n            doctype +\n            this.config.doctypeEnd;\n\n};\n\n/**\n * Create XML Processing Instruction tag.\n *\n * @param {Object} instruction instruction object\n *\n * @return {String}\n */\nJS2SVG.prototype.createProcInst = function(instruction) {\n\n    return  this.config.procInstStart +\n            instruction.name +\n            ' ' +\n            instruction.body +\n            this.config.procInstEnd;\n\n};\n\n/**\n * Create comment tag.\n *\n * @param {String} comment comment body\n *\n * @return {String}\n */\nJS2SVG.prototype.createComment = function(comment) {\n\n    return  this.config.commentStart +\n            comment +\n            this.config.commentEnd;\n\n};\n\n/**\n * Create CDATA section.\n *\n * @param {String} cdata CDATA body\n *\n * @return {String}\n */\nJS2SVG.prototype.createCDATA = function(cdata) {\n\n    return  this.config.cdataStart +\n            cdata +\n            this.config.cdataEnd;\n\n};\n\n/**\n * Create element tag.\n *\n * @param {Object} data element object\n *\n * @return {String}\n */\nJS2SVG.prototype.createElem = function(data) {\n\n    // beautiful injection for obtaining SVG information :)\n    if (\n        data.isElem('svg') &&\n        data.hasAttr('width') &&\n        data.hasAttr('height')\n    ) {\n        this.width = data.attr('width').value;\n        this.height = data.attr('height').value;\n    }\n\n    // empty element and short tag\n    if (data.isEmpty()) {\n        if (this.config.useShortTags) {\n            return this.createIndent() +\n                   this.config.tagShortStart +\n                   data.elem +\n                   this.createAttrs(data) +\n                   this.config.tagShortEnd;\n        } else {\n            return this.createIndent() +\n                   this.config.tagShortStart +\n                   data.elem +\n                   this.createAttrs(data) +\n                   this.config.tagOpenEnd +\n                   this.config.tagCloseStart +\n                   data.elem +\n                   this.config.tagCloseEnd;\n        }\n    // non-empty element\n    } else {\n        var tagOpenStart = this.config.tagOpenStart,\n            tagOpenEnd = this.config.tagOpenEnd,\n            tagCloseStart = this.config.tagCloseStart,\n            tagCloseEnd = this.config.tagCloseEnd,\n            openIndent = this.createIndent(),\n            textIndent = '',\n            processedData = '',\n            dataEnd = '';\n\n        if (this.textContext) {\n            tagOpenStart = defaults.tagOpenStart;\n            tagOpenEnd = defaults.tagOpenEnd;\n            tagCloseStart = defaults.tagCloseStart;\n            tagCloseEnd = defaults.tagCloseEnd;\n            openIndent = '';\n        } else if (data.isElem(textElem)) {\n            if (this.config.pretty) {\n                textIndent += openIndent + this.config.indent;\n            }\n            this.textContext = data;\n        }\n\n        processedData += this.convert(data).data;\n\n        if (this.textContext == data) {\n            this.textContext = null;\n            if (this.config.pretty) dataEnd = '\\n';\n        }\n\n        return  openIndent +\n                tagOpenStart +\n                data.elem +\n                this.createAttrs(data) +\n                tagOpenEnd +\n                textIndent +\n                processedData +\n                dataEnd +\n                this.createIndent() +\n                tagCloseStart +\n                data.elem +\n                tagCloseEnd;\n\n    }\n\n};\n\n/**\n * Create element attributes.\n *\n * @param {Object} elem attributes object\n *\n * @return {String}\n */\nJS2SVG.prototype.createAttrs = function(elem) {\n    var attrs = '';\n\n    elem.eachAttr(function(attr) {\n        if (attr.type === 'JSX') {\n            attrs += ` {...${attr.name}}`;\n        } else {\n            var attrName = reactAttrNames[attr.name] || attr.name\n            attrs +=    ' ' +\n                        attrName +\n                        this.config.attrStart +\n                        String(attr.value).replace(this.config.regValEntities, this.config.encodeEntity) +\n                        this.config.attrEnd;\n        }\n\n\n    }, this);\n\n    return attrs;\n\n};\n\n/**\n * Create text node.\n *\n * @param {String} text text\n *\n * @return {String}\n */\nJS2SVG.prototype.createText = function(text) {\n\n    return  this.createIndent() +\n            this.config.textStart +\n            text.replace(this.config.regEntities, this.config.encodeEntity) +\n            (this.textContext ? '' : this.config.textEnd);\n\n};\n"]}